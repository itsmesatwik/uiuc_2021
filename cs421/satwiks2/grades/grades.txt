Learning Module               Outcome (LM points)                                              Assessment (LM points)                           Score                  
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
1. Recursion                  1. Write a recursive function over integers (2)                  Recursion Activity problem 1                     100.0 (2.00)           
                              2. Write a mapping recursive function over lists (2)             Recursion Activity problem 2                     100.0 (2.00)           
                              3. Write a folding recursive function over lists (2)             Recursion Activity problem 3                     100.0 (2.00)           
                              4. Write a tail recursive function (2)                           Exam 1 - Tail Recursion problem 1                100.0 (2.00)           
                              5. Indicate an advantage of tail recursion over direct style (2) Exam 1 - Tail Recursion Advantage                100.0 (2.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
2. Algebraic Data Types       1. Write a datatype declaration (2)                              MP 1                                             100.0 (2.00)           
                              2. Consume a recursive datatype (2)                              ADT Activity                                     100.0 (2.00)           
                              3. Transform a recursive datatype (3)                            Exam 1 - ADTs q1                                 100.0 (3.00)           
                              4. Produce a recursive datatype (3)                              MP 1                                             100.0 (3.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
3. Higher Order Functions     1. Using HOFs (5)                                                Exam 1 - Using HOFs (version 1)                  100.0 (5.00)           
                              2. Writing HOFs (5)                                              Fixpoint Activity                                100.0 (2.00)           
                                                                                               Exam 1 - Writing HOFs (version 1)                100.0 (3.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
4. Interpreters (Expressions) 1. Write data type for eval (2)                                  MP 2                                             87.2340425531915 (1.74)
                              2. Write a lifting function (4)                                  MP 2                                             87.2340425531915 (3.49)
                              3. Write an eval clause from semantics (4)                       MP 2                                             87.2340425531915 (3.49)
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
5. Interpreters (Functions)   1. Use eval to create a closure (4)                              MP 2                                             87.2340425531915 (3.49)
                              2. Use eval to apply a function (4)                              MP 2                                             87.2340425531915 (3.49)
                              3. Show why closure environment is needed. (2)                   Exam 2 - Closures (v2)                           100.0 (2.00)           
                              4. Show difference between procedure and function (2)            Exam 2 - Procedure vs Function (v3)              100.0 (2.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
6. Lambda Calculus            1. Reduce a lambda-calculus expression (10)                      Exam 1 - Lambda Calculus (v1)                    100.0 (7.00)           
                                                                                               Lambda Calculus Activity                         x 50.00 (0)            
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
7. Evaluation Semantics       1. Write a big step semantics proof tree. (3)                    Exam 1 - Big Step Semantics (v1)                 x 75.20 (0)            
                              2. Write an eval clause given a big step rule. (2)               MP 2                                             87.2340425531915 (1.74)
                              3. Show a small step semantics reduction sequence. (3)                                                                                   
                              4. Identify a system having the Church-Rosser propery. (2)                                                                               
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
8. Typing Semantics           1. Write a monotype proof tree (5)                                                                                                       
                              2. Write a polytype proof tree (5)                                                                                                       
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
10. Continuations             1. Compare tail recursion and continuations (2)                  Exam 2 - CPS and Tail (3d)                       100.0 (1.00)           
                                                                                               Exam 2 - CPS and Tail (3s)                       100.0 (1.00)           
                              2. Convert a function into continuation passing style. (8)       Exam 2 - Write a function in CPS (v1)            100.0 (8.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
11. Type Classes and Monads   1. Implement the Eq or Ord typeclass (2)                         Typeclass Activity                               100.0 (2.00)           
                              2. Implement the Functor typeclass (2)                           Typeclass Activity                               100.0 (1.00)           
                                                                                               Exam 2 - Write Functor and Applicative (v2)      100.0 (1.00)           
                              3. Implement the Applicative typeclass (3)                       Typeclass Activity                               100.0 (1.00)           
                                                                                               Exam 2 - Write Functor and Applicative (v2)      100.0 (2.00)           
                              4. Implement the Monad typeclass (3)                             Typeclass Activity                               100.0 (1.00)           
                                                                                               Exam 2 - Write a Monad (v2)                      100.0 (2.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
12. Grammars                  1. Identifiy grammar properties (0)                                                                                                      
                              2. Demonstrate that a grammar is ambiguous (5)                   Exam 2 - Ambiguous Grammer (v2)                  80.0 (4.00)            
                              3. Stratify a grammar (0)                                                                                                                
                              4. Calculate FIRST and FOLLOW sets (5)                           Exam 2 - Select First and Follow Sets (v2)       x 70.00 (0)            
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
13. Regular Languages         1. Show an equivalent right linear grammar (4)                   Exam 2 - Regular Expression to Right Linear      100.0 (4.00)           
                              2. Given a pattern, provide a regular expression (4)                                                                                     
                              3. Indicate limits or capabilities of regular languages (2)      Exam 2 - Select Regular Langauge Capability (v5) 100.0 (1.00)           
                                                                                               Exam 2 - Select Regular Langauge Capability (v6) 100.0 (1.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
14. LL Parsing                1. Write an LL Parser in Haskell (4)                             Exam 2 - Convert LL Grammar to Haskell (v3)      100.0 (2.00)           
                                                                                               LL Activity - LL Parser                          100.0 (2.00)           
                              2. Convert a Grammar to LL (6)                                   LL Activity - LL Conversion                      100.0 (3.00)           
                                                                                               Exam 2 - Convert Grammar to LL (v3)              100.0 (2.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
15. LR Parsing                1. Identify Location of Shift/Reduce Conflict (3)                Exam 2 - Select Shift/Reduce (v2)                80.0 (2.40)            
                              2. Identify Significance of Shift/Reduce Conflict (2)                                                                                    
                              3. Produce LR Item Sets and Automata (5)                         LR Activity                                      100.0 (2.00)           
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
16. Unification               1. Identify four unification operations (4)                                                                                              
                              2. Solve a  unifcation problem (6)                                                                                                       
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
18. Prolog                    1. Write a list function in Prolog (4)                                                                                                   
                              2. Write a search function in Prolog (4)                                                                                                 
                              3. Place a cut operator (2)                                                                                                              
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
19. Variables and Parameters  1. Identify four binding properties of variables (5)                                                                                     
                              2. Identify different parameter passing styles (5)                                                                                       
----------------------------- ---------------------------------------------------------------- ------------------------------------------------ -----------------------
20. Metaprogramming           1. Write a program that writes a program (10)                                                                                            
                              2. Implement an interpreter with macros (10)                                                                                             
